
@{
    ViewBag.Title = "Categories";
}

<style>
    a {
        color: #000;
        text-decoration: none;
    }

    span {
        color: #5b468b;
    }

    .mycard p {
        font-weight: bolder;
        font-size: large;
    }

    .title {
        min-height: 60px;
        max-height: 60px;
        overflow: hidden;
    }

        .title:hover {
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #c5badf #fff;
        }

    .mycard img {
        width: 100%;
        object-fit: cover;
    }

    .mycard .tag {
        background-color: #5b468b;
        color: #fff;
    }

    .mycard {
        transition: transform 0.3s ease;
        will-change: transform;
    }

        .mycard:hover {
            transform: scale(1.1);
        }
</style>

<div id="app">

    <div class="container">
        <nav aria-label="breadcrumb " class="root pt-3">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"> <a href="@Url.Action("Index", "Home")">首頁</a></li>
                <li class="breadcrumb-item">  <a href="@Url.Action("Categories", "Home", new { id = 9 })"> 分類</a></li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Categories", "Home", new { id = ViewBag.CategoryId })" class="text-dark text-decoration-none">
                        {{categoryName}}
                    </a>
            </ol>
        </nav>
        <h3 class="mb-3">{{ categoryName  }}</h3>
        <div class="d-flex align-items-baseline mb-5 ">
            <a v-for="category in categories"
               :key="category.id"
               :href="`/Home/Categories/${category.id}`"
               class="btn btn-light border me-3">
                {{ category.name }}
            </a>
        </div>

        <div>
            <h6>共  <span class="fw-bolder">{{ coursesCount }}</span>  項結果</h6>

            <div class="cardContainer d-flex flex-wrap">
                <div v-for="card in cards"
                     :key="card.id"
                     class="mycard col-md-3 col-sm-12 p-3 pb-5 ps-0">
                    <a :href="`@Url.Action("ViewProduct", "Products")/${card.id}`">
                        <img :src="card.thumbnail ? `/images/${card.thumbnail}` : '/images/thumbnail.jpg'"
                             alt="collections-thumbnail"
                             class="thumbnail pb-2 img-fluid rounded" />


                    </a>
                    <div class="prodct-info">
                        <small class="tag p-1 rounded-1 fw-bolder">{{ card.courseCategory.name }}</small>
                        <p class="title pt-1">{{ card.title }}</p>
                        <small>{{ card.teacher.name }}</small>
                        <hr />
                    </div>
                    <p class="price mt-2">NT${{ card.price }}</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/vue.global.js"></script>
    <script src="~/Scripts/myheader.js"></script>
    <script>
        const { createApp, ref, onMounted } = Vue;
        const config = {
    setup() {
                const cards = ref([]);
                const categoryId = @Html.Raw(ViewBag.categoryId);
                const categoryName = ref('');
                const coursesCount = ref(0);
                const categories = ref([]);

        const fetchCourseCategory = async () => {
            try {
                const response = await fetch(`/api/course/category/${categoryId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                const courses = await response.json();
                cards.value = courses;
                coursesCount.value = courses.length;
                // 根據 categoryId 判斷分類名稱
                if (categoryId === 0) {
                    categoryName.value = '所有分類'; // 當 categoryId 為 0 時顯示「所有分類」
                } else if (courses.length > 0) {
                    categoryName.value = courses[0].courseCategory.name; // 其他情況取得分類名稱
                }
                
            }
            catch (error) {
                console.error('Error fetching', error);
            }
        };

            const fetchCategories = async () => {
                try {
                    const response = await fetch(`/api/categories`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const result = await response.json();
                    categories.value = result;

                }
                catch (error) {
                    console.error('fetch 所有課程分類失敗', error);
                }
            };

            onMounted(async () => {
                await fetchCourseCategory();
                await fetchCategories();
            });

            return { cards, coursesCount, categoryName, categories };
    },
};
        const app = createApp(config);
        app.mount("#app");
    </script>

} 