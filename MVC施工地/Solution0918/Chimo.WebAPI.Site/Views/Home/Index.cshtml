
@{
    ViewBag.Title = "Index";
}

<style>
    * {
        font-family: Arial, Helvetica, sans-serif;
    }

    .card-container {
        margin: 0 auto;
        max-width: 80vw;
    }

    .mycard p {
        font-weight: bolder;
        font-size: large;
    }

    .title {
        min-height: 60px;
        max-height: 60px;
        overflow: hidden;
    }

        .title:hover {
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #5b468b #fff;
        }

    .mycard img {
        width: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

        .mycard img:hover {
            transform: scale(1.05);
        }

    .myPd {
        background-color: #eeebf8;
    }

        .myPd .title:hover {
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #5b468b #eeebf8;
        }
</style>
<body>
    <div id="app">
        <div class="sticky-top"></div>
        <!-- 幻燈片bg -->
        <div id="carouselExampleAutoplaying"
             class="carousel slide p-5"
             data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="/images/banner01.jpg"
                         class="w-100 rounded"
                         alt="banner01" />
                </div>
                <div class="carousel-item">
                    <img src="/images/banner02.jpg"
                         class="w-100 rounded"
                         alt="banner02" />
                </div>
                <div class="carousel-item">
                    <img src="/images/banner03.jpg"
                         class="w-100 rounded"
                         alt="banner03" />
                </div>
            </div>
            <button class="carousel-control-prev"
                    type="button"
                    data-bs-target="#carouselExampleAutoplaying"
                    data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next"
                    type="button"
                    data-bs-target="#carouselExampleAutoplaying"
                    data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
        <!-- 幻燈片end -->
        <!-- 我的課程 bg -->
        @if (ViewData["IsLoggedIn"] != null && (bool)ViewData["IsLoggedIn"])
        {

            <div class="myPd">
                <div id="carouselExampleControlsMyPd"
                     class="card-container carousel slide mb-4">
                    <h2 class="pb-3 pt-3 fw-bolder">我的課程</h2>
                    <div class="carousel-inner" ref="carouselInner">
                        <div v-for="(chunk,index) in purchasedCourses"
                             :key="index"
                             class="carousel-item"
                             :class="{active:index===currentIndex}">
                            <div class="d-flex">
                                <div v-for="card in chunk"
                                     :key="card.id"
                                     class="mycard col-3 ps-2 pe-2">
                                    <a href="course.html">
                                        <img :src="card.img"
                                             alt="course-thumbnail "
                                             class="pb-2 col-lg-3 img-fluid rounded" />
                                    </a>
                                    <div class="prodct-info border-bottom">
                                        <small class="tag p-1 rounded-1 fw-bolder">課程</small>
                                        <p class="title pt-1">{{card.title}}</p>
                                        <small>{{card.teacher}}</small>
                                    </div>
                                    <p class="price mt-2">NT${{card.price}}</p>
                                </div>
                            </div>
                        </div>

                        <button class="carousel-control-prev"
                                type="button"
                                data-bs-target="#carouselExampleControlsMyPd"
                                data-bs-slide="prev"
                                v-on:click="prevSlide">
                            <span class="carousel-control-prev-icon"
                                  aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next"
                                type="button"
                                data-bs-target="#carouselExampleControlsMyPd"
                                data-bs-slide="next"
                                v-on:click="nextSlide">
                            <span class="carousel-control-next-icon"
                                  aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
            </div>
        }


        <!-- 我的課程 end -->
        <!-- 熱門推薦 bg -->
        <div class="hotPd">
            <div id="carouselExampleControls"
                 class="card-container carousel slide mb-4">
                <h2 class="pb-3 pt-3 fw-bolder">熱門推薦</h2>
                <div class="carousel-inner" ref="carouselInner">
                    <div v-for="(chunk,index) in recommendedChunks"
                         :key="index"
                         class="carousel-item"
                         :class="{active:index===currentIndex}">
                        <div class="d-flex">
                            <div v-for="card in chunk"
                                 :key="card.id"
                                 class="mycard col-3 ps-2 pe-2">

                                <a :href="`@Url.Action("ViewProduct", "Products")/${card.id}`">
                                    <img :src="card.thumbnail"
                                         alt="course-thumbnail "
                                         class="pb-2 col-lg-3 img-fluid rounded" />
                                </a>
                                <div class="prodct-info border-bottom">
                                    <small class="tag p-1 rounded-1 fw-bolder">課程</small>
                                    <p class="title pt-1">{{card.title}}</p>
                                    <small>{{card.teacher.name}}</small>
                                </div>
                                <p class="price mt-2">NT${{card.price}}</p>
                            </div>
                        </div>
                    </div>

                    <button class="carousel-control-prev"
                            type="button"
                            data-bs-target="#carouselExampleControls"
                            data-bs-slide="prev"
                            v-on:click="prevSlide">
                        <span class="carousel-control-prev-icon"
                              aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next"
                            type="button"
                            data-bs-target="#carouselExampleControls"
                            data-bs-slide="next"
                            v-on:click="nextSlide">
                        <span class="carousel-control-next-icon"
                              aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- 熱門推薦 end -->
    </div>

    @section scripts{
        <script src="~/Scripts/bootstrap.bundle.min.js"></script>
        <script src="~/Scripts/vue.global.js"></script>
        <script src="~/Scripts/myheader.js"></script>
        <script>
            const { createApp, ref, computed, onMounted } = Vue;

            const config = {
                setup() {
                    const carouselInner = ref(null);
                    const currentIndex = ref(0);
                    const purchasedCourses = ref([]);
                    const recommendedCourses = ref([]);

                    const fetchPurchasedCourses = async () => {
                        try {
                            const response = await fetch('/api/courses/purchased', {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            purchasedCourses.value = await response.json();
                        }
                        catch (error) {
                            console.error('Error fetching purchased courses:', error);
                        }
                    };

                    const fetchRecommendedCourses = async () => {
                        try {
                            const response = await fetch('/api/courses/recommended');
                            recommendedCourses.value = await response.json();
                        } catch (error) {
                            console.error('Error fetching recommended courses:', error);
                        }
                    };

                    const purchasedChunks = computed(() => {
                        const chunkSize = 4;
                        const result = [];

                        for (let i = 0; i < purchasedCourses.value.length; i += chunkSize) {
                            result.push(purchasedCourses.value.slice(i, i + chunkSize));
                        }
                        return result;
                    });

                    const recommendedChunks = computed(() => {
                        const chunkSize = 4;
                        const result = [];

                        for (let i = 0; i < recommendedCourses.value.length; i += chunkSize) {
                            result.push(recommendedCourses.value.slice(i, i + chunkSize));
                        }
                        return result;
                    });

                    onMounted(() => {
                        fetchPurchasedCourses();
                        fetchRecommendedCourses();
                    });

                    return {
                        purchasedChunks,
                        recommendedChunks,
                        currentIndex,
                        carouselInner,
                    };
                },
            };
            const app = createApp(config);
            app.component("my-header", myHeader);
            app.mount("#app")
        </script>
    }
</body>