
@{
    ViewBag.Title = "SearchResult";
    var searchQuery = Request.QueryString["query"];
    var decodedSearchQuery = HttpUtility.UrlDecode(searchQuery); // 解碼查詢字串

}

<style>
    .searchResult {
        flex-wrap: wrap;
    }

    .cardContainer {
        margin: 0 auto;
    }

    .mycard p {
        font-weight: bolder;
        font-size: large;
    }

    .title {
        min-height: 60px;
        max-height: 60px;
        overflow: hidden;
    }

        .title:hover {
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #5b468b #fff;
        }

    .mycard img {
        width: 100%;
        object-fit: cover;
    }

    .mycard .tag {
        background-color: #5b468b;
        color: #fff;
    }

    .mycard {
        transition: transform 0.3s ease;
        will-change: transform;
    }

        .mycard:hover {
            transform: scale(1.1);
        }
</style>

<div id="app">

    <div class="container">
        <h1 class="mt-3 fw-bolder">搜尋結果:{{ searchValue }}</h1>
        <hr />
        <!-- 搜尋結果 bg -->
        <h4 class="mb-3">
            共有
            <span class="specialCount">[{{ totalCount }}]</span>
            筆搜尋結果
        </h4>
        <div class="searchResult">
            <div class="cardContainer d-flex flex-wrap">
                <div v-for="card in cards"
                     :key="card.id"
                     class="mycard col-md-3 col-sm-12 p-3 pb-5 ps-0">
                    <a href="product.html">
                        <img :src="`/images/${card.thumbnail}`"
                             alt="course-thumbnail "
                             class="thumbnail pb-2 img-fluid rounded" />
                    </a>
                    <div class="prodct-info">
                        <small class="tag p-1 rounded-1 fw-bolder">課程</small>
                        <p class="title pt-1">{{card.title}}</p>
                        <small>{{card.teacher.name}}</small>
                        <hr />
                    </div>
                    <p class="price mt-2">NT${{card.price}}</p>
                </div>
            </div>
        </div>
    </div>
    <!-- 搜尋結果 ed -->
</div>

@section Scripts{
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/vue.global.js"></script>
    <script src="~/Scripts/myheader.js"></script>
    <script>
        const { createApp, ref, onMounted } = Vue;

       const config = {
           setup() {
               const cards = ref([]);
               const searchValue = ref("@decodedSearchQuery"); // 使用 Razor 語法將搜尋關鍵字注入
               const totalCount = ref(0); // 新增總數變數

        const searchCourses = async () => {
            if (!searchValue.value) {
                alert("請輸入搜尋條件");
                return;
            }

            try {
                const response = await fetch(`/api/search/course/${encodeURIComponent(searchValue.value)}`, {
                    method: "GET",
                });
                if (!response.ok) {
                    throw new Error("無法獲取課程資料");
                }
                cards.value = await response.json();
                totalCount.value = cards.value.length; // 更新總數
            } catch (error) {
                console.error(error);
            }
        };

        onMounted(() => {
            searchCourses(); // 頁面載入時自動搜尋
        });

               return { cards, searchValue, totalCount };
    },
};
        const app = createApp(config);
        app.mount("#app");
    </script>
}