
@{
    ViewBag.Title = "UpdatePassword";
}

<style>
    body {
        background-color: #eee;
    }

    .list-group {
        position: sticky;
        top: 175px;
    }

    .list-group-item img {
        max-height: 10vw;
    }

    .list-group-item {
        min-height: 60px;
        font-size: 1.2rem;
        font-weight: bolder;
    }

        .list-group-item.active {
            background-color: #5b468b;
        }

    .chargeTag {
        color: #fff;
    }

    .content {
        background-color: #fff;
    }

    .update {
        font-size: 1vw;
        color: #ccc;
    }

    .updateBtn {
        background-color: #5b468b;
        color: #fff;
    }

        .updateBtn:hover {
            background-color: #7e68b3;
            color: #fff;
        }

        .updateBtn:active {
            background-color: #564385;
            color: #fff;
        }

    .profile {
        position: relative;
        display: inline-block;
    }

        .profile:hover .camera {
            opacity: 0.9; /* 鼠標懸停時顯示 */
        }

    .camera {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: opacity 0.3s;
    }



    .readonly-field {
        background-color: #e9ecef; /* 灰色背景 */
        color: #6c757d; /* 淡灰色文字 */
        cursor: not-allowed; /* 滑鼠指標變成禁止符號 */
    }
</style>

<div id="app">
    <div class="container">
        <div class="row">
            <div class="col-4 mt-3 mb-3">
                <div class="text-center list-group align-middle">
                    <div class="list-group-item">
                        <div class="profile btn border-0">
                            <input type="file" accept="image/*" v-on:change="updateAvatar" style="display: none;" id="fileInput" />
                            <img :src="member.avatar"
                                 alt="profilePic"
                                 class="avatarA img-fluid m-3"
                                 v-on:click="document.getElementById('fileInput').click()" />
                            <img src="~/images/camera.png"
                                 alt="editProfile"
                                 class="camera img-fluid " />
                        </div>

                        <h4 class="fw-bolder">{{member.name}}</h4>
                        <p>
                            會員點數：<span class="specialCount">{{member.point}}</span>
                            pt
                            <a href="/Members/TopUp" class="chargeTag btn btn-warning p-1 ms-2">
                                儲值
                            </a>
                        </p>
                    </div>
                    <a href="/Members/EditInfo" class="list-group-item list-group-item-action active align-content-center border-0 rounded" aria-current="true">
                        會員資料
                    </a>
                    <a href="/Members/MyCourses" class="list-group-item list-group-item-action align-content-center border-0 rounded" aria-current="true">
                        我的課程
                    </a>
                    <a href="/Members/MyCollections" class="list-group-item list-group-item-action align-content-center border-0 rounded" aria-current="true">
                        我的收藏
                    </a>
                    <a href="/Members/MyOrders" class="list-group-item list-group-item-action align-content-center border-0 rounded" aria-current="true">
                        購買紀錄
                    </a>
                </div>
            </div>
            <div class="content col-8 mt-3 mb-3 rounded">
                <section class="m-4">
                    <h4 class="fw-bolder">修改密碼</h4>

                    <div class="d-block ">
                        <div class="mb-3 col-6 p-2">
                            <label for="originPassword" class="form-label fw-bolder">舊密碼</label>
                            <input type="password" class="form-control" id="originPassword"/>
                        </div>

                        <div class="mb-3 col-6 p-2">
                            <label for="newPassword" class="form-label fw-bolder">新密碼</label>
                            <input type="password" class="form-control" id="newPassword" />
                        </div>

                        <div class="mb-3 col-6 p-2">
                            <label for="confirmPassword" class="form-label fw-bolder">確認密碼</label>
                            <input type="password" class="form-control" id="confirmPassword" />
                        </div>
                    </div>

                    <div v-if="message" class="alert" :class="messageType">{{ message }}</div>

                    <section class="m-4">
                        <div class="text-end">                            
                            <button class="updateBtn btn" v-on:click="confirmUpdate">修改</button>
                        </div>
                    </section>
                </section>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/vue.global.js"></script>
    <script src="~/Scripts/myheader.js"></script>
    <script>
    @using Chimo.WebAPI.Site.Models
    const { createApp, ref, onMounted } = Vue;
    createApp({
        setup() {

            const member = ref({
                id: 0,
                name: "",
                avatar: "",
                point: 0,
                gender: 0,
                phone: "",
                email: "",
                intro: "",
                updatedDate: "",
            });

            const originalMember = ref({ ...member.value });
            const message = ref(""); // 提示訊息
            const messageType = ref(""); // 訊息類型

            const originPassword = ref("");
            const newPassword = ref("");
            const confirmPassword = ref("");

            const fetchMemberProfile = async () => {
                try {
                    const token = '@AuthHelper.GetTokenFromCookie()';
                    console.log("獲取的Token:", token);

                    // 使用 decodeToken 解碼會員資料
                    const decodedMember = decodeToken(token);
                    member.value.id = decodedMember.Id; // 確認這裡的屬性名稱正確
                    member.value.name = decodedMember.unique_name;
                    member.value.email = decodedMember.Email;
                    member.value.point = decodedMember.Point;
                    member.value.avatar = decodedMember.ProfileImage;
                    member.value.intro = decodedMember.Intro;
                    member.value.gender = decodedMember.Gender;
                    member.value.updatedDate = formatDate(decodedMember.updatedDate); // 格式化日期

                    originalMember.value = { ...member.value }; // 獲取後儲存原始值

                    // 接下來可以用 decodedMember.id 來獲取更詳細的會員資料
                    const response = await fetch(`/api/profile/${member.value.id}`, {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    });

                    if (!response.ok) {
                        throw new Error('網路請求失敗');
                    }

                    const data = await response.json();
                    Object.assign(member.value, data);
                    member.value.updatedDate = formatDate(data.updatedDate); // 格式化日期
                    originalMember.value = { ...member.value }; // 更新原始值
                } catch (error) {
                    console.error("獲取會員資料失敗:", error);
                }
            };

            const formatDate = (dateString) => {
                const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
                const date = new Date(dateString);
                return date.toLocaleDateString('zh-TW', options).replace(/\//g, '/'); // 格式化為 YYYY/MM/DD
            };
            

            const resetPassword = () => {
                console.log("重設密碼功能尚未實作");
            };

            function decodeToken(token) {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(c =>
                    '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));
                return JSON.parse(jsonPayload);
            }

            onMounted(fetchMemberProfile); // 組件掛載時自動獲取會員資料

            return { member, message, messageType,  resetPassword };
        }
    }).mount("#app");
    </script>
}




