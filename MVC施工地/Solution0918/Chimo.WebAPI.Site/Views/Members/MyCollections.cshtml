
@{
    ViewBag.Title = "MyCollections";
}

<style>
    body {
        background-color: #eee;
    }

    .list-group {
        position: sticky;
        top: 175px;
    }

    .list-group-item img {
        max-height: 10vw;
    }

    .list-group-item {
        min-height: 60px;
        font-size: 1.2rem;
        font-weight: bolder;
    }

        .list-group-item.active {
            background-color: #5b468b;
        }

    .chargeTag {
        color: #fff;
    }

    .content {
        background-color: #fff;
    }

    .cardContainer {
        margin: 0 auto;
    }

    .mycard p {
        font-weight: bolder;
        font-size: large;
    }

    .title {
        min-height: 60px;
        max-height: 60px;
        overflow: hidden;
    }

        .title:hover {
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #5b468b #fff;
        }

    .mycard img {
        width: 100%;
        object-fit: cover;
    }

    .mycard .tag {
        background-color: #5b468b;
        color: #fff;
    }

    .thumbnail {
        transition: transform 0.3s ease;
        will-change: transform;
    }

        .thumbnail:hover {
            transform: scale(1.1);
        }

    .refund {
        align-items: baseline;
    }

    .cartIcon {
        object-fit: contain;
        max-height: 15px;
    }

    .searchBtn {
        background-color: #5b468b;
        color: #fff;
    }
        .searchBtn:hover {
            background-color: #2b1b41;
            color: #fff;
        }

</style>
<body>
    <div id="app">

  

    <div class="container">
        <div class="row">
            <div class="col-4 mt-3 mb-3">
                <div class="text-center list-group">
                    <div class="list-group-item">
                        <img :src="`/images/${member.avatar}`"
                             alt="profile"
                             class="avatarA img-fluid m-3" />
                        <h4 class="fw-bolder">{{member.name}}</h4>
                        <p>
                            會員點數：<span class="specialCount">{{member.point}}</span>
                            pt
                                 <a :href="`@Url.Action("TopUp", "Members")?returnUrl=@Url.Action("MyCollections", "Members")`"
                                    class="chargeTag btn btn-warning p-1 ms-2">
                                     儲值
                                 </a>
                        </p>
                    </div>

                    <a href="/Members/EditInfo"
                       class="list-group-item list-group-item-action align-content-center border-0 rounded"
                       aria-current="true">
                        會員資料
                    </a>
                    <a href="/Members/MyCourses"
                       class="list-group-item list-group-item-action align-content-center border-0 rounded"
                       aria-current="true">
                        我的課程
                    </a>
                    <a href="#"
                       class="list-group-item list-group-item-action active align-content-center border-0 rounded"
                       aria-current="true">
                        我的收藏
                    </a>
                    <a href="/Members/MyOrders"
                       class="list-group-item list-group-item-action align-content-center border-0 rounded"
                       aria-current="true">
                        購買紀錄
                    </a>
                </div>
            </div>
         
                <div class="content col-8 mt-3 mb-3">
                    <section class="m-4">
                        <div class="d-flex justify-content-between">
                            <h4 class="fw-bolder">我的收藏</h4>
                        </div>
                        <hr />
                        <div :class="['mt-5 text-center notFound' ,{'d-none': collections.length != 0 }]">
                            <img src="../images/notFoundImg.png" alt="notFound" class="img-fluid mb-3" style="width:20vw"/>
                            <h5 class="fw-bolder mb-3">還沒有收藏任何課程</h5>
                            <a href="@Url.Action("index", "Home")" class="searchBtn btn btn-lg">探索課程</a>
                        </div>
                        <div class="d-flex flex-wrap">
                            <div class="cardContainer d-flex flex-wrap">
                                <div v-for="card in collections"
                                     :key="card.id"
                                     class="mycard col-lg-4 col-md-6 col-sm-12 p-3 pb-5 ps-0">
                                    <a :href="`@Url.Action("ViewProduct", "Products")/${card.id}`">
                                        <img :src="`../images/${card.img}`"
                                             alt="collections-thumbnail "
                                             class="thumbnail pb-2 img-fluid rounded" />
                                    </a>
                                    <div class="prodct-info">
                                        <small class="tag p-1 rounded-1 fw-bolder">課程</small>
                                        <p class="title pt-1">{{card.title}}</p>
                                        <small>{{card.teacherName}}</small>
                                    </div>
                                    <p class="price border-top border-bottom pt-2 pb-2">
                                        NT${{card.price}}
                                    </p>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </div>

    @section scripts{
        <script src="~/Scripts/bootstrap.bundle.min.js"></script>
        <script src="~/Scripts/vue.global.js"></script>
        <script src="~/Scripts/myheader.js"></script>
        <script>
 @using Chimo.WebAPI.Site.Models
 const { createApp, ref, onMounted } = Vue;

            const config = {
     setup() {
         const member = ref({
             id: 0,
             name: "",
             avatar: "",
             point: 0,
         });
                    const decodeToken = (token) => {
                        const base64Url = token.split('.')[1];
                        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                        const jsonPayload = decodeURIComponent(atob(base64).split('').map(c =>
                            '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));
                        return JSON.parse(jsonPayload);
                    };

                    const token = '@AuthHelper.GetTokenFromCookie()';
                    const decodedMember = decodeToken(token);
                    member.value.id = decodedMember.Id;
                    member.value.name = decodedMember.unique_name;
                    member.value.avatar = decodedMember.ProfileImage;

         const collections = ref([]); // 存放會員課程資料
         const fetchMemberCollections = async () => {
             try {
                 const response = await fetch(`/api/collections/${member.value.id}`, {
                     method: 'GET',
                     headers: {
                         'Authorization': `Bearer ${token}`
                     }
                 });

                 if (!response.ok) {
                     throw new Error('獲取收藏紀錄資料失敗');
                 }

                 const data = await response.json();
                 collections.value = data.map(collection => ({
                     id: collection.courseId,
                     title: collection.title,
                     img: collection.thumbnail,
                     teacherName: collection.teacherName,
                     price: collection.price,
                 }));
             } catch (error) {
                 console.error("獲取收藏紀錄資料失敗:", error);
             }
                    };

        const fetchMemberPoint = async () => {
                        try {
                            member.value.id = decodedMember.Id;
                            const response = await fetch(`/api/getMemberPoint/${member.value.id}`, {
                                method: 'GET',
                                headers: {
                                    'Authorization': `Bearer ${token}`
                                }
                            });

                            if (!response.ok) {
                                throw new Error('網路請求失敗');
                            }

                            const data = await response.json();
                            member.value.point = data.memberPoint; // 將回傳的點數值儲存在 member 的 point 屬性中
                        } catch (error) {
                            console.error("獲取會員資料失敗:", error);
                        }
                    };
                    const fetchMemberImage = async () => {
                        try {

                            member.value.id = decodedMember.Id;
                            const response = await fetch(`/api/getMemberImage/${member.value.id}`, {
                                method: 'GET',
                                headers: {
                                    'Authorization': `Bearer ${token}`
                                }
                            });

                            if (!response.ok) {
                                throw new Error('網路請求失敗');
                            }

                            const data = await response.json();
                            member.value.avatar = data.memberImage;
                        } catch (error) {
                            console.error("獲取會員資料失敗:", error);
                        }
                    };

         onMounted(async () => {

             await fetchMemberCollections();
             await fetchMemberPoint();
             await fetchMemberImage();
         });

                    return { member, collections, fetchMemberPoint };
     }
            }
            const app = createApp(config);
            app.mount("#app")
        </script>
    }
</body>
