@{
    ViewBag.Title = "Register";
}

<link href="~/Content/myLogin.css" rel="stylesheet" />
<style>
    .register img {
        min-height: 15vh;
        max-height: 15vw;
    }
</style>

<div id="app">
    <div class="sticky-top"></div>
    <div class="row">
        <div class="loginPic col-sm-12 col-md-8">
            <img src="../images/loginPic.jpg" alt="loginPic" class="img-fluid" />
        </div>
        <div class="loginForm col-md-4 p-5">
            <h2 class="mb-3">註冊</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <input type="text"
                   name="userName"
                   v-model="userName"
                   id="userName"
                   placeholder="使用者名稱"
                   class="form-control mb-3" />
            <input type="email"
                   name="userEmail"
                   v-model="userEmail"
                   id="userEmail"
                   placeholder="電子信箱"
                   class="form-control mb-3" />
            <input type="password"
                   name="userPassword"
                   v-model="userPassword"
                   id="userPassword"
                   placeholder="密碼"
                   class="form-control mb-3"
                   style="color: #5b468b" />
            <input type="password"
                   name="confirmPassword"
                   v-model="confirmPassword"
                   id="confirmPassword"
                   placeholder="確認密碼"
                   class="form-control mb-3 col-12"
                   style="color: #5b468b" />

            <p v-if="errorMessage" class="text-danger">{{ errorMessage }}</p>

            <button style="height: 65px"
                    class="loginBtn btn align-center col-12 mb-3 p-3"
                    v-on:click="register">
                註冊
            </button>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/vue.global.js"></script>
    <script src="~/Scripts/myheader.js"></script>
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script>
        const { createApp, ref } = Vue;

        const app = createApp({
            setup() {
                const userName = ref('');
                const userEmail = ref('');
                const userPassword = ref('');
                const confirmPassword = ref('');
                const errorMessage = ref('');

                // 註冊邏輯
                const register = async () => {
                     const emailRegex = /^[^\s]+[^\s]+\.[^\s]+$/; // Email 正則表達式

                    if (!userEmail.value || !emailRegex.test(userEmail.value)) {
                    errorMessage.value = "請輸入有效的 Email 格式";
                          return;
                    }
                    if (!userPassword.value || userPassword.value.trim() === '') {
                        errorMessage.value = "密碼不可為空";
                        return;
                    }

                    if (userPassword.value !== confirmPassword.value) {
                        errorMessage.value = "密碼與確認密碼不一致";
                        return;
                    }
                    try {
                        const response = await fetch('/api/register', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                Name: userName.value,
                                Email: userEmail.value,
                                Password: userPassword.value
                            })
                        });

                        if (response.ok) {
                            const responseData = await response.json(); // 取得完整的響應物件
                            const userId = responseData.userId; // 獲取 userId

                            // 使用 Redirect 導向 RegisterDetail 動作
                            window.location.href = `/Login/RegisterDetail?userId=${userId}`;
                        } else {
                            const errorText = await response.text();
                            errorMessage.value = `註冊失敗: ${errorText}`;
                        }
                    } catch (error) {
                        console.error(error);
                        errorMessage.value = "無法連接伺服器";
                    }
                };


                return {
                    userName,
                    userEmail,
                    userPassword,
                    confirmPassword,
                    register,
                    errorMessage
                };
            },
        });

        app.mount("#app");
    </script>
}
